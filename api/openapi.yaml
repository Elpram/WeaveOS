openapi: 3.0.3
info:
  title: Ritual OS API (MVP)
  version: 0.1.0
servers:
  - url: http://localhost:3000
paths:
  /health:
    get:
      summary: Liveness probe
      tags: [System]
      operationId: getHealth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
  /rituals:
    post:
      summary: Create ritual
      description: |
        Creates a ritual. Supports lightweight rituals with optional instant runs and pasted link inputs.
      tags: [Rituals]
      operationId: createRitual
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRitualRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRitualResponse'
        '400':
          description: Invalid payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Ritual already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: List rituals
      tags: [Rituals]
      operationId: listRituals
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRitualsResponse'
  /rituals/{ritual_id}:
    get:
      summary: Get ritual
      tags: [Rituals]
      operationId: getRitual
      parameters:
        - $ref: '#/components/parameters/RitualId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRitualResponse'
        '404':
          description: Ritual not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /rituals/{ritual_id}/runs:
    post:
      summary: Create run
      description: |
        Creates a run for the ritual. When `instant_runs` is true the run may be auto-started/auto-completed in future enhancements.
      tags: [Runs]
      operationId: createRun
      parameters:
        - $ref: '#/components/parameters/RitualId'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRunRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRunResponse'
        '400':
          description: Invalid payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Ritual not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Run already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /runs/{run_id}:
    get:
      summary: Get run
      description: Placeholder for future implementation.
      tags: [Runs]
      operationId: getRun
      parameters:
        - $ref: '#/components/parameters/RunId'
      responses:
        '501':
          description: Not implemented
  /runs/{run_id}/artifacts:
    get:
      summary: List run artifacts
      description: Placeholder for future implementation.
      tags: [Artifacts]
      operationId: listRunArtifacts
      parameters:
        - $ref: '#/components/parameters/RunId'
      responses:
        '501':
          description: Not implemented
  /artifacts:
    post:
      summary: Create artifact
      description: Placeholder for future implementation.
      tags: [Artifacts]
      operationId: createArtifact
      responses:
        '501':
          description: Not implemented
  /attention:
    post:
      summary: Create attention item
      description: Create an in-memory attention item for a run.
      tags: [Attention]
      operationId: createAttention
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAttentionRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAttentionResponse'
        '400':
          description: Invalid payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Run not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /runs/{run_id}/attention:
    get:
      summary: List run attention items
      description: List attention items associated with a run.
      tags: [Attention]
      operationId: listRunAttention
      parameters:
        - $ref: '#/components/parameters/RunId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRunAttentionResponse'
        '404':
          description: Run not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /attention/{attention_id}/resolve:
    post:
      summary: Resolve attention item
      description: Resolve an attention item and log the resolution on the parent run.
      tags: [Attention]
      operationId: resolveAttention
      parameters:
        - $ref: '#/components/parameters/AttentionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolveAttentionResponse'
        '404':
          description: Attention item or run not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Attention item already resolved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /automations:
    post:
      summary: Register automation
      description: Placeholder for future implementation.
      tags: [Automations]
      operationId: createAutomation
      responses:
        '501':
          description: Not implemented
  /invocations/request:
    post:
      summary: Request invocation URL
      description: Placeholder for future implementation.
      tags: [Automations]
      operationId: requestInvocation
      responses:
        '501':
          description: Not implemented
components:
  parameters:
    RitualId:
      in: path
      name: ritual_id
      required: true
      schema:
        type: string
      description: Unique key for the ritual.
    AttentionId:
      in: path
      name: attention_id
      required: true
      schema:
        type: string
      description: Unique identifier for the attention item.
    RunId:
      in: path
      name: run_id
      required: true
      schema:
        type: string
      description: Unique key for the run.
  schemas:
    HealthResponse:
      type: object
      required: [status]
      properties:
        status:
          type: string
          example: ok
    ErrorResponse:
      type: object
      required: [error]
      properties:
        error:
          type: string
          description: Machine-readable error code.
          example: ritual_not_found
    RitualInput:
      type: object
      required: [type, value]
      properties:
        type:
          type: string
          enum: [external_link]
        value:
          type: string
          description: URL pasted by the user.
          example: https://city.local/trash
        label:
          type: string
          description: Optional friendly name for the link.
          example: City schedule
    Run:
      type: object
      required:
        - run_key
        - ritual_key
        - status
        - created_at
        - updated_at
        - inputs
        - activity_log
      properties:
        run_key:
          type: string
          description: Identifier for the run. Defaults to an ISO timestamp when omitted.
          example: 2024-05-18T07:00:00.000Z
        ritual_key:
          type: string
          description: Key of the ritual this run belongs to.
          example: trash-day
        status:
          type: string
          enum: [planned, in_progress, complete]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        inputs:
          type: array
          description: Inputs available to this run, inherited from the parent ritual.
          items:
            $ref: '#/components/schemas/RitualInput'
        activity_log:
          type: array
          description: Timeline of notable run events.
          items:
            $ref: '#/components/schemas/ActivityLogEntry'
    Ritual:
      type: object
      required:
        - ritual_key
        - name
        - instant_runs
        - inputs
        - created_at
        - updated_at
        - runs
      properties:
        ritual_key:
          type: string
          example: trash-day
        name:
          type: string
          example: Trash day pickup
        instant_runs:
          type: boolean
        inputs:
          type: array
          items:
            $ref: '#/components/schemas/RitualInput'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        runs:
          type: array
          description: Ordered from oldest to newest.
          items:
            $ref: '#/components/schemas/Run'
    CreateRitualRequest:
      type: object
      required: [ritual_key, name]
      properties:
        ritual_key:
          type: string
          description: Short identifier for the ritual.
          example: trash-day
        name:
          type: string
          description: Human readable name for the ritual.
          example: Trash day pickup
        instant_runs:
          type: boolean
          description: Whether runs should be auto-started/auto-completed when created.
          default: false
        inputs:
          type: array
          description: Optional default inputs available to every run.
          items:
            $ref: '#/components/schemas/RitualInput'
          default: []
    CreateRitualResponse:
      type: object
      required: [ritual]
      properties:
        ritual:
          $ref: '#/components/schemas/Ritual'
    ListRitualsResponse:
      type: object
      required: [rituals]
      properties:
        rituals:
          type: array
          items:
            $ref: '#/components/schemas/Ritual'
    GetRitualResponse:
      type: object
      required: [ritual]
      properties:
        ritual:
          $ref: '#/components/schemas/Ritual'
    CreateRunRequest:
      type: object
      properties:
        run_key:
          type: string
          description: Custom run key. If omitted, a new ISO timestamp is used.
      additionalProperties: false
    CreateRunResponse:
      type: object
      required: [run]
      properties:
        run:
          $ref: '#/components/schemas/Run'
    ActivityLogEntry:
      type: object
      required:
        - timestamp
        - event
        - message
      properties:
        timestamp:
          type: string
          format: date-time
        event:
          type: string
          description: Machine-readable event name.
          example: on_attention_resolved
        message:
          type: string
          description: Human readable summary of the event.
        metadata:
          type: object
          nullable: true
          additionalProperties: {}
    AttentionItem:
      type: object
      required:
        - attention_id
        - run_key
        - type
        - message
        - resolved
        - created_at
      properties:
        attention_id:
          type: string
          example: attn_1716111967_abcd12345
        run_key:
          type: string
        type:
          type: string
          enum: [auth_needed, missing_draft, decision_required, other]
        message:
          type: string
        resolved:
          type: boolean
        created_at:
          type: string
          format: date-time
        resolved_at:
          type: string
          format: date-time
          nullable: true
    CreateAttentionRequest:
      type: object
      required: [run_key, type, message]
      additionalProperties: false
      properties:
        run_key:
          type: string
        type:
          type: string
          enum: [auth_needed, missing_draft, decision_required, other]
        message:
          type: string
    CreateAttentionResponse:
      type: object
      required: [attention]
      properties:
        attention:
          $ref: '#/components/schemas/AttentionItem'
    ListRunAttentionResponse:
      type: object
      required: [attention_items]
      properties:
        attention_items:
          type: array
          items:
            $ref: '#/components/schemas/AttentionItem'
    ResolveAttentionResponse:
      type: object
      required: [attention]
      properties:
        attention:
          $ref: '#/components/schemas/AttentionItem'
